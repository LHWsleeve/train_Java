<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.guigu"></context:component-scan>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/page/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
<!--    默认前端控制器拦截所有资源(除了jsp)，所以js文件会404；应该把js文件交给tomcat处理-->
<!--    告诉SpringMVC，自己映射的请求就自己处理。不能处理的请求直接交给tomcat
           副作用：静态资源能访问，但是动态映射的请求失败-->
    <mvc:default-servlet-handler/>
<!--    解决上面这个带来的问题，springmvc可以保证动态请求和静态请求都能访问。
conversion-service="conversionService：可以使用自己配置的类型转换组件-->
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

<!--    告诉Springmvc不用默认的ConverService，使用自定义的类型转换器-->
    <bean class="org.springframework.context.support.ConversionServiceFactoryBean">
<!--            再converters中添加自定义类型转换器-->
        <property name="converters">
            <set>
                <bean class="com.guigu.componet.MyStringToEmployeeConverter"></bean>
            </set>
        </property>
    </bean>
</beans>